{"ast":null,"code":"var _jsxFileName = \"/Users/asifdeen/assessment/wine_data/src/App.js\";\nimport './App.css';\nimport data from './data/Wine-Data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const alcoholList = data.reduce((result, alcohol) => {\n    const alcoholClass = alcohol.Alcohol;\n    if (!result[alcoholClass]) {\n      result[alcoholClass] = [];\n    }\n    result[alcoholClass].push(alcohol);\n    return result;\n  }, {});\n  //console.log(alcoholList)\n  function getMean(keyprop, index) {\n    let result;\n    Object.entries(alcoholList).map(key => {\n      if (key[0] === keyprop) {\n        let ap = key[1].map(alcohol => {\n          return alcohol.Flavanoids;\n        });\n        result = ap.reduce((result, ap) => {\n          if (ap[0] === \".\") {\n            ap = Number(0 + ap);\n          }\n          result += ap;\n          return result;\n        });\n      }\n    });\n    return result.toFixed(3);\n  }\n  function getMedian(keyprop, index) {\n    let result;\n    Object.entries(alcoholList).map(key => {\n      if (key[0] === keyprop) {\n        let ap = key[1].map(alcohol => {\n          return alcohol.Flavanoids;\n        });\n        let sortedAP = ap.sort((a, b) => a - b);\n        if (sortedAP.length % 2 === 0) {\n          const middleValue = Math.floor(sortedArr.length / 2);\n        }\n        result = ap.reduce((result, ap) => result + ap);\n      }\n    });\n    return result;\n  }\n  function getMode(keyprop, index) {\n    let result;\n    Object.entries(alcoholList).map(key => {\n      if (key[0] === keyprop) {\n        let ap = key[1].map(alcohol => {\n          return alcohol.Flavanoids;\n        });\n        result = ap.reduce((result, ap) => result + ap);\n      }\n    });\n    return result;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wine Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Measure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), Object.keys(alcoholList).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Class \", key]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 52\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Mean\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), Object.keys(alcoholList).map((key, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getMean(key, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 59\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Median\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), Object.keys(alcoholList).map((key, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getMedian(key, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 59\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["data","jsxDEV","_jsxDEV","App","alcoholList","reduce","result","alcohol","alcoholClass","Alcohol","push","getMean","keyprop","index","Object","entries","map","key","ap","Flavanoids","Number","toFixed","getMedian","sortedAP","sort","a","b","length","middleValue","Math","floor","sortedArr","getMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","keys","_c","$RefreshReg$"],"sources":["/Users/asifdeen/assessment/wine_data/src/App.js"],"sourcesContent":["import './App.css';\nimport data from './data/Wine-Data.json'\n\nfunction App() {\n  const alcoholList = data.reduce((result,alcohol)=>{\n    const alcoholClass = alcohol.Alcohol\n    if(!result[alcoholClass]){\n      result[alcoholClass] =[]\n    }\n    result[alcoholClass].push(alcohol)\n    return result\n  },{})\n  //console.log(alcoholList)\n  function getMean (keyprop,index){\n    let result\n    Object.entries(alcoholList).map((key)=>{\n      if(key[0]===keyprop){\n        let ap = key[1].map((alcohol)=>{\n          return alcohol.Flavanoids\n        })\n        \n        result = ap.reduce((result,ap)=>{\n          if (ap[0]===\".\"){\n            ap =Number( 0 + ap)\n          }\n          result+=ap\n          return result\n        })\n      }\n      \n    })\n    return result.toFixed(3)\n  }\n  function getMedian (keyprop,index){\n    let result\n    Object.entries(alcoholList).map((key)=>{\n      if(key[0]===keyprop){\n        let ap = key[1].map((alcohol)=>{\n          return alcohol.Flavanoids\n        })\n        let sortedAP = ap.sort((a,b)=>a-b)\n        if(sortedAP.length %2 ===0){\n          const middleValue = Math.floor(sortedArr.length / 2);\n        }\n        result = ap.reduce((result,ap)=>result+ap)\n      }\n      \n    })\n    return result\n  }\n  function getMode (keyprop,index){\n    let result\n    Object.entries(alcoholList).map((key)=>{\n      if(key[0]===keyprop){\n        let ap = key[1].map((alcohol)=>{\n          return alcohol.Flavanoids\n        })\n        result = ap.reduce((result,ap)=>result+ap)\n      }\n      \n    })\n    return result\n  }\n  return (\n    <div className=\"App\">\n      <h1>Wine Data</h1>\n      <table>\n        <thead>\n            <tr>\n              <th>Measure</th>\n              {Object.keys(alcoholList).map((key)=><th>Class {key}</th>)}\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n              <td>Mean</td>\n              {Object.keys(alcoholList).map((key, index)=><td>{getMean(key,index)}</td>)}\n            </tr>\n            <tr>\n              <td>Median</td>\n              {Object.keys(alcoholList).map((key, index)=><td>{getMedian(key,index)}</td>)}\n            </tr>\n            <tr>\n              <td>Mode</td>\n            </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}